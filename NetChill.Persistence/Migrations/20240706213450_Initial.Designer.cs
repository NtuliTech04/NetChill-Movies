// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetChill.Persistence.Contexts;

#nullable disable

namespace NetChill.Persistence.Migrations
{
    [DbContext(typeof(NetChillDbContext))]
    [Migration("20240706213450_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("NetChill.Domain.Entities.Movie.MovieBaseInfo", b =>
                {
                    b.Property<Guid>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AvailableFrom")
                        .HasColumnType("datetime2");

                    b.Property<double?>("AvgRating")
                        .HasColumnType("float");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsFeatured")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUpcoming")
                        .HasColumnType("bit");

                    b.Property<string>("Languages")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YearReleased")
                        .HasColumnType("int");

                    b.HasKey("MovieId");

                    b.ToTable("MovieBaseInfoes");
                });

            modelBuilder.Entity("NetChill.Domain.Entities.Movie.MovieClip", b =>
                {
                    b.Property<int>("ClipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClipId"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("MoviePosterPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MovieRef")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MovieTrailerUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VideoClipPath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClipId");

                    b.HasIndex("MovieRef")
                        .IsUnique();

                    b.ToTable("MovieClips");
                });

            modelBuilder.Entity("NetChill.Domain.Entities.Movie.MovieGenre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenreId"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("GenreDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenreName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("GenreId");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("NetChill.Domain.Entities.Movie.MovieLanguage", b =>
                {
                    b.Property<int>("LanguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LanguageId"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LanguageNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("SpokenLanguage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LanguageId");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("NetChill.Domain.Entities.Movie.MovieProduction", b =>
                {
                    b.Property<int>("ProductionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductionId"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Directors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MovieRef")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MovieStars")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Writers")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductionId");

                    b.HasIndex("MovieRef")
                        .IsUnique();

                    b.ToTable("MovieProductions");
                });

            modelBuilder.Entity("NetChill.Domain.Entities.Movie.TrackCreationProgress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MovieRef")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Progress")
                        .HasColumnType("float");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MovieRef")
                        .IsUnique();

                    b.ToTable("CreationProgress");
                });

            modelBuilder.Entity("NetChill.Domain.Entities.Movie.MovieClip", b =>
                {
                    b.HasOne("NetChill.Domain.Entities.Movie.MovieBaseInfo", "MovieBaseInfo")
                        .WithOne("MovieClip")
                        .HasForeignKey("NetChill.Domain.Entities.Movie.MovieClip", "MovieRef")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MovieBaseInfo");
                });

            modelBuilder.Entity("NetChill.Domain.Entities.Movie.MovieProduction", b =>
                {
                    b.HasOne("NetChill.Domain.Entities.Movie.MovieBaseInfo", "MovieBaseInfo")
                        .WithOne("MovieProduction")
                        .HasForeignKey("NetChill.Domain.Entities.Movie.MovieProduction", "MovieRef")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MovieBaseInfo");
                });

            modelBuilder.Entity("NetChill.Domain.Entities.Movie.TrackCreationProgress", b =>
                {
                    b.HasOne("NetChill.Domain.Entities.Movie.MovieBaseInfo", "MovieBaseInfo")
                        .WithOne("TrackCreationProgress")
                        .HasForeignKey("NetChill.Domain.Entities.Movie.TrackCreationProgress", "MovieRef")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MovieBaseInfo");
                });

            modelBuilder.Entity("NetChill.Domain.Entities.Movie.MovieBaseInfo", b =>
                {
                    b.Navigation("MovieClip");

                    b.Navigation("MovieProduction");

                    b.Navigation("TrackCreationProgress");
                });
#pragma warning restore 612, 618
        }
    }
}
